{
  $type: TranslationUnit,
  Tree: {
    $type: BlockNode,
    SeperatorSymbol: ;,
    Terminator: #eof,
    Children: {
      $type: ImmutableList<AstNode>,
      $values: [
        {
          $type: CallNode,
          FunctionExpr: {
            $type: NameNode,
            Name: a,
            Range: 1:1-1:1
          },
          Arguments: {
            $type: ImmutableList<AstNode>,
            $values: [
              {
                $type: TernaryOperatorNode,
                FirstExpr: {
                  $type: NameNode,
                  Name: b,
                  Range: 1:3-1:3
                },
                SecondExpr: {
                  $type: NameNode,
                  Name: c,
                  Range: 1:7-1:7
                },
                ThirdExpr: {
                  $type: NameNode,
                  Name: d,
                  Range: 1:11-1:11
                },
                Range: 1:3-1:5
              },
              {
                $type: BinaryOperatorNode,
                LeftExpr: {
                  $type: NameNode,
                  Name: e,
                  Range: 1:14-1:14
                },
                Operator: +,
                RightExpr: {
                  $type: NameNode,
                  Name: f,
                  Range: 1:18-1:18
                },
                Range: 1:14-1:18
              }
            ]
          },
          Range: 1:1-1:2,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        }
      ]
    },
    Range: 1:1-1:23
  },
  Document: {
    Filename: syntethic.dsl,
    Source: a(b ? c : d, e + f),
    Messages: []
  }
}